// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Generator for Prisma Client
generator client {
  provider = "prisma-client-js"
}

// PostgreSQL datasource
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String    @id @unique
  email                  String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
  files                  File[]
  Message                Message[]
}

// File model representing files in the database
model File {
  id           String       @id @default(cuid())
  name         String
  uploadStatus UploadStatus @default(Pending)
  url          String
  key          String
  messages     Message[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  userId       String? // Nullable relation to User
  User         User?        @relation(fields: [userId], references: [id])
}

// Enum representing upload statuses
enum UploadStatus {
  Pending
  Processing
  Complete
  Failed
}

model Message {
  id   String @id @default(cuid())
  text String @db.Text()

  isUserMessage Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  User          User?    @relation(fields: [userId], references: [id])
  userId        String?
  File          File?    @relation(fields: [fileId], references: [id])
  fileId        String?
}
